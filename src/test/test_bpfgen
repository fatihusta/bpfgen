# Function to run the bpfgen executable and check output
run_test () {
	BPFGEN=bpfgen
	if [ "${2}" = true ] 
	then
		BPFGEN=../bpfgen	
	fi
	OUTPUT=$(${BPFGEN} -t $1)
	#If bpfgen returned 0
	if [ $? -eq 0 ]
	then
		#Output from bpfgen should only have 'Running bootstrap'
		RIGHT_OUTPUT="Running bootstrap" 
		if [[ "${OUTPUT}" == "${RIGHT_OUTPUT}" ]]
		then
			#Test that generated bpf code is correct 
			TAG=`bpftool p | grep xdp | awk '{split($0,a,":"); print a[1]}'` #Get bpf tag 
			echo `bpftool p d x i $TAG` > temp # Put output of bpftool into temp 
			DIFF=`diff temp /usr/bin/tests/test_$1` #Ensure generated bpfcode is expected 
			if [ $? -eq 0 ]
			then
				return 0
			fi	
							
		fi	
	fi

	#Return 1 if failed 
	return 1
}
UBUNTU=false
while getopts "u" arg; do
	case $arg in 
		u) 
			UBUNTU=true
			;;
	esac
done

echo "TESTING BPFGEN"

#Color declarations
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

echo "RESULTS:"

# Run all tests 
for i in 1 2
do
	run_test $i $UBUNTU
	#If return code is 0, then test passed
	if [ $? -eq 0 ] 
	then
		echo -e "test $i: ${GREEN}pass${NC}"
	else
		echo -e "test $i: ${RED}fail${NC}"
	fi
done

#Remove temp file 
if [ -e temp ]
then 
	rm temp
fi

#Remove XDP programs
IP=`ip a | grep xdp | awk '{split($0,a,":"); print a[2]}'`
if [ -n "${IP}" ]
then 
	ip link set dev ${IP} xdp off
fi